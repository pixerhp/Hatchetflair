extends Node

const TCHUNK_L: int = 16
const TCHUNK_T: int = TCHUNK_L ** 3
const TCHUNK_S: Vector3i = Vector3i(TCHUNK_L, TCHUNK_L, TCHUNK_L)
const TCHUNK_HL: float = TCHUNK_L / 2.0
const TCHUNK_HS: Vector3 = Vector3(TCHUNK_HL, TCHUNK_HL, TCHUNK_HL)
const TCHUNK_HS2: Vector3 = Vector3(TCHUNK_HL - 0.5, TCHUNK_HL - 0.5, TCHUNK_HL - 0.5)
const TCHUNK_HS3: Vector3 = Vector3(TCHUNK_HL - 1, TCHUNK_HL - 1, TCHUNK_HL - 1)

func triangle_normal_vector(verts: PackedVector3Array) -> Vector3:
	return ((verts[2]-verts[0]).cross((verts[1]-verts[0]))).normalized()

const ts_tess_cube_move: Array[Vector3i] = [
	Vector3i(-1, 0, 0), Vector3i(1, 0, 0),
	Vector3i(0, -1, 0), Vector3i(0, 1, 0),
	Vector3i(0, 0, -1), Vector3i(0, 0, 1),
]
const ts_tess_cube_verts: PackedVector3Array = [
	Vector3(0, 0, 0)-TCHUNK_HS, Vector3(0, 1, 0)-TCHUNK_HS, Vector3(0, 0, 1)-TCHUNK_HS, Vector3(0, 1, 1)-TCHUNK_HS,
	Vector3(1, 0, 1)-TCHUNK_HS, Vector3(1, 1, 1)-TCHUNK_HS, Vector3(1, 0, 0)-TCHUNK_HS, Vector3(1, 1, 0)-TCHUNK_HS,
	
	Vector3(1, 0, 0)-TCHUNK_HS, Vector3(0, 0, 0)-TCHUNK_HS, Vector3(1, 0, 1)-TCHUNK_HS, Vector3(0, 0, 1)-TCHUNK_HS,
	Vector3(0, 1, 0)-TCHUNK_HS, Vector3(1, 1, 0)-TCHUNK_HS, Vector3(0, 1, 1)-TCHUNK_HS, Vector3(1, 1, 1)-TCHUNK_HS,
	
	Vector3(1, 0, 0)-TCHUNK_HS, Vector3(1, 1, 0)-TCHUNK_HS, Vector3(0, 0, 0)-TCHUNK_HS, Vector3(0, 1, 0)-TCHUNK_HS,
	Vector3(0, 0, 1)-TCHUNK_HS, Vector3(0, 1, 1)-TCHUNK_HS, Vector3(1, 0, 1)-TCHUNK_HS, Vector3(1, 1, 1)-TCHUNK_HS,
]
# (Tesselated cube doesn't have norms because we can reuse index 0-5 of 'move' as them.)

const ts_tess_rhombdo_move: Array[Vector3i] = [
	Vector3i(0, -1, -1), Vector3i(-1, 0, -1), Vector3i(1, 0, -1), Vector3i(0, 1, -1), 
	Vector3i(-1, -1, 0), Vector3i(1, -1, 0), Vector3i(-1, 1, 0), Vector3i(1, 1, 0), 
	Vector3i(0, -1, 1), Vector3i(-1, 0, 1), Vector3i(1, 0, 1), Vector3i(0, 1, 1), 
	
	Vector3i(0, -1, 0), Vector3i(0, 0, -1), Vector3i(0, 0, -1), Vector3i(-1, 0, 0), 
	Vector3i(1, 0, 0), Vector3i(0, 0, -1), Vector3i(0, 0, -1), Vector3i(0, 1, 0), 
	Vector3i(0, -1, 0), Vector3i(-1, 0, 0), Vector3i(0, -1, 0), Vector3i(1, 0, 0), 
	Vector3i(-1, 0, 0), Vector3i(0, 1, 0), Vector3i(1, 0, 0), Vector3i(0, 1, 0), 
	Vector3i(0, -1, 0), Vector3i(0, 0, 1), Vector3i(-1, 0, 0), Vector3i(0, 0, 1), 
	Vector3i(0, 0, 1), Vector3i(1, 0, 0), Vector3i(0, 0, 1), Vector3i(0, 1, 0), 
]
const ts_tess_rhombdo_verts: PackedVector3Array = [
	Vector3(0, -1, 0) - TCHUNK_HS2, Vector3(0.5, -0.5, -0.5) - TCHUNK_HS2, 
		Vector3(-0.5, -0.5, -0.5) - TCHUNK_HS2, Vector3(0, 0, -1) - TCHUNK_HS2,
	Vector3(0, 0, -1) - TCHUNK_HS2, Vector3(-0.5, 0.5, -0.5) - TCHUNK_HS2, 
		Vector3(-0.5, -0.5, -0.5) - TCHUNK_HS2, Vector3(-1, 0, 0) - TCHUNK_HS2,
	Vector3(1, 0, 0) - TCHUNK_HS2, Vector3(0.5, 0.5, -0.5) - TCHUNK_HS2, 
		Vector3(0.5, -0.5, -0.5) - TCHUNK_HS2, Vector3(0, 0, -1) - TCHUNK_HS2,
	Vector3(0, 0, -1) - TCHUNK_HS2, Vector3(0.5, 0.5, -0.5) - TCHUNK_HS2, 
		Vector3(-0.5, 0.5, -0.5) - TCHUNK_HS2, Vector3(0, 1, 0) - TCHUNK_HS2,
	
	Vector3(0, -1, 0) - TCHUNK_HS2, Vector3(-0.5, -0.5, -0.5) - TCHUNK_HS2, 
		Vector3(-0.5, -0.5, 0.5) - TCHUNK_HS2, Vector3(-1, 0, 0) - TCHUNK_HS2,
	Vector3(0, -1, 0) - TCHUNK_HS2, Vector3(0.5, -0.5, 0.5) - TCHUNK_HS2, 
		Vector3(0.5, -0.5, -0.5) - TCHUNK_HS2, Vector3(1, 0, 0) - TCHUNK_HS2,
	Vector3(-1, 0, 0) - TCHUNK_HS2, Vector3(-0.5, 0.5, -0.5) - TCHUNK_HS2, 
		Vector3(-0.5, 0.5, 0.5) - TCHUNK_HS2, Vector3(0, 1, 0) - TCHUNK_HS2,
	Vector3(1, 0, 0) - TCHUNK_HS2, Vector3(0.5, 0.5, 0.5) - TCHUNK_HS2, 
		Vector3(0.5, 0.5, -0.5) - TCHUNK_HS2, Vector3(0, 1, 0) - TCHUNK_HS2,
	
	Vector3(0, -1, 0) - TCHUNK_HS2, Vector3(-0.5, -0.5, 0.5) - TCHUNK_HS2, 
		Vector3(0.5, -0.5, 0.5) - TCHUNK_HS2, Vector3(0, 0, 1) - TCHUNK_HS2,
	Vector3(-1, 0, 0) - TCHUNK_HS2, Vector3(-0.5, 0.5, 0.5) - TCHUNK_HS2, 
		Vector3(-0.5, -0.5, 0.5) - TCHUNK_HS2, Vector3(0, 0, 1) - TCHUNK_HS2,
	Vector3(0, 0, 1) - TCHUNK_HS2, Vector3(0.5, 0.5, 0.5) - TCHUNK_HS2, 
		Vector3(0.5, -0.5, 0.5) - TCHUNK_HS2, Vector3(1, 0, 0) - TCHUNK_HS2,
	Vector3(0, 0, 1) - TCHUNK_HS2, Vector3(-0.5, 0.5, 0.5) - TCHUNK_HS2, 
		Vector3(0.5, 0.5, 0.5) - TCHUNK_HS2, Vector3(0, 1, 0) - TCHUNK_HS2,
]
const ts_tess_rhombdo_norms: PackedVector3Array = [
	0.70710678 * Vector3(ts_tess_rhombdo_move[0]),
	0.70710678 * Vector3(ts_tess_rhombdo_move[1]),
	0.70710678 * Vector3(ts_tess_rhombdo_move[2]),
	0.70710678 * Vector3(ts_tess_rhombdo_move[3]),
	
	0.70710678 * Vector3(ts_tess_rhombdo_move[4]),
	0.70710678 * Vector3(ts_tess_rhombdo_move[5]),
	0.70710678 * Vector3(ts_tess_rhombdo_move[6]),
	0.70710678 * Vector3(ts_tess_rhombdo_move[7]),
	
	0.70710678 * Vector3(ts_tess_rhombdo_move[8]),
	0.70710678 * Vector3(ts_tess_rhombdo_move[9]),
	0.70710678 * Vector3(ts_tess_rhombdo_move[10]),
	0.70710678 * Vector3(ts_tess_rhombdo_move[11]),
]

# A list of unique vertex states, analogous to all others using rotations, flipping and state inversion.
var ts_march_patt_states: PackedByteArray = [
	0b00000000, 0b00000001, 0b00000011, 0b00001001, 0b10000001,
	0b00000111, 0b01000011, 0b01001001, 0b00001111, 0b00010111,
	0b00100111, 0b11000011, 0b10000111, 0b01101001, ]

var ts_march_ang_patt_verts: PackedVector3Array = PackedVector3Array([
	# Edge midpoints: (0-11)
	Vector3(0,-0.5,-0.5), Vector3(-0.5,0,-0.5), 
	Vector3(0.5,0,-0.5), Vector3(0,0.5,-0.5),
	Vector3(-0.5,-0.5,0), Vector3(0.5,-0.5,0),
	Vector3(-0.5,0.5,0), Vector3(0.5,0.5,0),
	Vector3(0,-0.5,0.5), Vector3(-0.5,0,0.5), 
	Vector3(0.5,0,0.5), Vector3(0,0.5,0.5),
	# Face ambiguity center-points: (12-17)
	Vector3(0,0,-0.5), Vector3(0,-0.5,0),
	Vector3(-0.5,0,0), Vector3(0.5,0,0),
	Vector3(0,0.5,0), Vector3(0,0,0.5),
	# Volume center-point: (18)
	Vector3(0,0,0),
	# 8-section center-points: (19-26)
	Vector3(-0.25,-0.25,-0.25), Vector3(0.25,-0.25,-0.25), 
	Vector3(-0.25,0.25,-0.25), Vector3(0.25,0.25,-0.25), 
	Vector3(-0.25,-0.25,0.25), Vector3(0.25,-0.25,0.25), 
	Vector3(-0.25,0.25,0.25), Vector3(0.25,0.25,0.25), 
])

var ts_march_ang_patt_inds: Array = [
	[[], [], [], [], [], [], [], []],
	[[0,1,4], [], [], [], [], [], [], []],
	[[4,13,1, 12,1,13], [13,5,12, 2,12,5], [], [], [], [], [], []],
	[[0,12,4, 4,12,1], [], [], [3,12,7, 7,12,2], [], [], [], []],
	[[0,1,4], [], [], [], [], [], [], [11,7,10]],
	
	[[18,14,4, 18,4,13], [18,13,5, 18,5,2], [18,3,6, 18,6,14], [18,2,3], [], [], [], []],
	[[14,4,13, 14,13,12, 14,12,1], [13,5,2, 13,2,12], [], [], [], [], [11,14,6, 11,9,14], []],
	# alt 0b01001001 "stars/hexagons" pattern: [[4,0,14, 19,0,12, 19,12,1, 19,1,14], [], [], [2,7,12, 22,7,16, 22,16,3, 22,3,12], [], [], [11,9,16, 25,9,14, 25,14,6, 25,6,16], []],
	[[1,14,12, 12,14,0, 4,0,14], [], [], [3,12,16, 16,12,7, 2,7,12], [], [], [6,16,14, 14,16,9, 11,9,16], []],
	[[4,13,14, 18,14,13], [13,5,18, 15,18,5], [14,18,6, 16,6,18], [18,15,16, 7,16,15], [], [], [], []], # 1111 simple
	[[], [18,5,2], [18,3,6], [18,2,3], [18,9,8], [18,8,5], [18,6,9], []], # the hexagon
	
	[[18,14,4], [18,15,2], [18,3,6, 18,6,14], [18,2,3], [18,4,8], [18,8,10, 18,10,15], [], []], # beautiful symmetry
	[[1,14,12, 18,12,14, 14,4,18, 13,18,4], [12,18,2, 15,2,18, 18,13,15, 5,15,13], [], [], [], [], [9,14,17, 18,17,14, 14,6,18, 16,18,6], [17,18,10, 15,10,18, 18,16,15, 7,15,16]], # extruded + sign
	[[13,18,4, 14,4,18], [5,15,13, 18,13,15], [18,16,14, 6,14,16], [18,15,16, 16,15,3, 2,3,15], [], [], [], [7,15,16, 16,15,11, 10,11,15]], # intersecting rects
	[[18,12,1, 18,1,14, 18,13,0, 18,0,12, 18,14,4, 18,4,13], [], [], [18,12,2, 18,2,15, 18,16,3, 18,3,12, 18,15,7, 18,7,16], [], [18,17,10, 18,10,15, 18,13,8, 18,8,17, 18,15,5, 18,5,13], [18,17,9, 18,9,14, 18,16,11, 18,11,17, 18,14,6, 18,6,16], []], # maximum ambiguity
]

var ts_march_ang_inds: Array = [
	[[], [], [], [], [], [], [], []],
	[[4,1,0], [], [], [], [], [], [], []],
	[[], [0,2,5], [], [], [], [], [], []],
	[[13,1,12, 1,13,4], [5,12,2, 12,5,13], [], [], [], [], [], []],
	[[], [], [1,6,3], [], [], [], [], []],
	[[4,12,0, 12,4,14], [], [14,3,12, 3,14,6], [], [], [], [], []],
	[[], [0,12,5, 5,12,2], [3,12,6, 6,12,1], [], [], [], [], []],
	[[13,4,18, 4,14,18], [2,5,18, 5,13,18], [14,6,18, 6,3,18], [3,2,18], [], [], [], []],
	[[], [], [], [3,7,2], [], [], [], []],
	[[1,12,4, 4,12,0], [], [], [2,12,7, 7,12,3], [], [], [], []],
	[[], [0,15,5, 15,0,12], [], [12,7,15, 7,12,3], [], [], [], []],
	[[18,13,4, 18,4,1], [18,15,5, 18,5,13], [18,1,3], [18,3,7, 18,7,15], [], [], [], []],
	[[], [], [12,6,16, 6,12,1], [2,16,7, 16,2,12], [], [], [], []],
	[[18,0,4, 18,4,14], [18,2,0], [18,14,6, 18,6,16], [18,16,7, 18,7,2], [], [], [], []],
	[[0,1,18], [15,5,18, 5,0,18], [1,6,18, 6,16,18], [16,7,18, 7,15,18], [], [], [], []],
	[[13,14,18, 14,13,4], [5,18,15, 18,5,13], [18,6,16, 6,18,14], [15,16,7, 16,15,18], [], [], [], []],
	[[], [], [], [], [9,4,8], [], [], []],
	[[14,0,13, 0,14,1], [], [], [], [9,13,8, 13,9,14], [], [], []],
	[[], [5,13,2, 2,13,0], [], [], [4,13,9, 9,13,8], [], [], []],
	[[14,1,18, 1,12,18], [12,2,18, 2,5,18], [], [], [8,9,18, 9,14,18], [5,8,18], [], []],
	[[], [], [1,14,3, 3,14,6], [], [9,14,8, 8,14,4], [], [], []],
	[[18,12,0, 18,0,13], [], [18,6,3, 18,3,12], [], [18,13,8, 18,8,9], [], [18,9,6], []],
	[[], [13,2,5, 2,13,12, 12,13,0], [12,6,3, 6,12,14, 14,12,1], [], [14,8,9, 8,14,13, 13,14,4], [], [], []],
	[[], [2,5,18], [6,3,18], [3,2,18], [8,9,18], [5,8,18], [9,6,18], []],
	[[], [], [], [7,2,3], [9,4,8], [], [], []],
	[[0,13,12, 13,14,12, 14,1,12], [], [], [12,3,7, 2,12,7], [13,8,14, 8,9,14], [], [], []],
	[[], [13,0,12, 13,12,15, 13,15,5], [], [12,3,7, 12,7,15], [9,13,8, 9,4,13], [], [], []],
	[[18,14,1], [18,15,5], [18,1,3], [18,3,7, 18,7,15], [18,8,9, 18,9,14], [18,5,8], [], []],
	[[], [], [6,16,14, 16,12,14, 12,1,14], [16,7,12, 7,2,12], [14,4,8, 9,14,8], [], [], []],
	[[0,13,18], [2,0,18], [6,16,18], [16,7,18, 7,2,18], [13,8,18, 8,9,18], [], [9,6,18], []],
	[[14,0,1, 0,14,13, 13,14,4], [], [], [], [14,8,9, 8,14,13, 13,14,18], [13,15,5, 15,13,18], [14,16,18, 16,14,6], [18,7,15, 7,18,16]],
	[[], [], [], [], [8,9,18], [15,5,18, 5,8,18], [9,6,18, 6,16,18], [16,7,18, 7,15,18]],
	[[], [], [], [], [], [8,5,10], [], []],
	[[0,13,1, 1,13,4], [], [], [], [], [8,13,10, 10,13,5], [], []],
	[[], [13,2,15, 2,13,0], [], [], [], [8,15,10, 15,8,13], [], []],
	[[4,1,18, 1,12,18], [12,2,18, 2,15,18], [], [], [8,4,18], [15,10,18, 10,8,18], [], []],
	[[], [], [3,1,6], [], [], [8,5,10], [], []],
	[[13,4,14, 13,14,12, 13,12,0], [], [14,6,3, 14,3,12], [], [], [10,13,5, 10,8,13], [], []],
	[[], [2,15,12, 15,13,12, 13,0,12], [12,1,6, 3,12,6], [], [], [15,10,13, 10,8,13], [], []],
	[[4,14,18], [2,15,18], [14,6,18, 6,3,18], [3,2,18], [8,4,18], [15,10,18, 10,8,18], [], []],
	[[], [], [], [7,15,3, 3,15,2], [], [5,15,8, 8,15,10], [], []],
	[[0,13,12, 12,13,1, 4,1,13], [], [], [2,12,15, 15,12,7, 3,7,12], [], [5,15,13, 13,15,8, 10,8,15], [], []],
	[[], [13,0,18, 0,12,18], [], [12,3,18, 3,7,18], [], [10,8,18, 8,13,18], [], [7,10,18]],
	[[18,4,1], [], [18,1,3], [18,3,7], [18,8,4], [18,10,8], [], [18,7,10]],
	[[], [], [12,1,6, 12,6,16], [15,2,12, 15,12,16, 15,16,7], [], [8,15,10, 8,5,15], [], []],
	[[], [5,15,13, 13,15,0, 2,0,15], [], [], [18,13,14, 4,14,13], [18,15,13, 13,15,8, 10,8,15], [16,18,6, 14,6,18], [7,15,16, 18,16,15]],
	[[13,0,18, 0,1,18], [], [1,6,18], [], [8,13,18], [10,8,18], [6,16,18], [16,7,18, 7,10,18]],
	[[], [], [], [], [18,8,4, 18,4,14], [18,10,8], [18,14,6, 18,6,16], [18,16,7, 18,7,10]],
	[[], [], [], [], [17,4,13, 4,17,9], [10,13,5, 13,10,17], [], []],
	[[14,1,18, 1,0,18], [0,5,18], [], [], [17,9,18, 9,14,18], [5,10,18, 10,17,18], [], []],
	[[18,4,0], [18,0,2, 18,2,15], [], [], [18,17,9, 18,9,4], [18,15,10, 18,10,17], [], []],
	[[18,1,12, 1,18,14], [15,12,2, 12,15,18], [], [], [17,14,18, 14,17,9], [10,18,15, 18,10,17], [], []],
	[[], [], [14,6,3, 1,14,3], [], [4,13,14, 13,17,14, 17,9,14], [13,5,17, 5,10,17], [], []],
	[[18,12,0], [18,0,5], [18,6,3, 18,3,12], [], [18,17,9], [18,5,10, 18,10,17], [18,9,6], []],
	[[18,14,12, 12,14,0, 4,0,14], [18,12,15, 2,15,12], [1,14,12, 12,14,3, 6,3,14], [], [9,14,17, 18,17,14], [17,18,10, 15,10,18], [], []],
	[[], [], [6,3,18], [3,2,18, 2,15,18], [], [], [17,9,18, 9,6,18], [15,10,18, 10,17,18]],
	[[], [], [], [3,15,2, 3,7,15], [17,9,4, 17,4,13], [15,10,17, 15,17,13, 15,13,5], [], []],
	[[12,14,1, 14,12,18], [15,0,5, 0,15,12, 12,15,18], [], [15,3,7, 3,15,12, 12,15,2], [18,9,14, 9,18,17], [15,17,18, 17,15,10], [], []],
	[[4,0,18], [0,12,18], [], [12,3,18, 3,7,18], [17,9,18, 9,4,18], [10,17,18], [], [7,10,18]],
	[[], [], [14,1,18, 1,3,18], [3,7,18], [], [], [17,9,18, 9,14,18], [7,10,18, 10,17,18]],
	[[1,14,12, 18,12,14, 14,4,18, 13,18,4], [12,18,2, 15,2,18, 18,13,15, 5,15,13], [], [], [], [], [9,14,17, 18,17,14, 14,6,18, 16,18,6], [17,18,10, 15,10,18, 18,16,15, 7,15,16]],
	[[], [15,2,0, 5,15,0], [], [], [], [], [17,9,16, 9,6,16], [10,17,15, 17,16,15, 16,7,15]],
	[[0,14,4, 0,1,14], [], [], [], [], [], [14,6,16, 14,16,17, 14,17,9], [16,7,10, 16,10,17]],
	[[], [], [], [], [], [], [6,16,9, 17,9,16], [16,7,17, 10,17,7]],
	[[], [], [], [], [], [], [6,9,11], []],
	[[4,14,0, 0,14,1], [], [], [], [], [], [6,14,11, 11,14,9], []],
	[[], [0,2,5], [], [], [], [], [11,6,9], []],
	[[1,12,14, 12,13,14, 13,4,14], [12,2,13, 2,5,13], [], [], [], [], [14,9,11, 6,14,11], []],
	[[], [], [16,1,14, 1,16,3], [], [], [], [11,14,9, 14,11,16], []],
	[[12,0,18, 0,4,18], [], [16,3,18, 3,12,18], [], [4,9,18], [], [9,11,18, 11,16,18], []],
	[[], [12,2,5, 0,12,5], [1,14,12, 14,16,12, 16,3,12], [], [], [], [14,9,16, 9,11,16], []],
	[[18,13,4], [18,2,5, 18,5,13], [18,16,3], [18,3,2], [18,4,9], [], [18,9,11, 18,11,16], []],
	[[], [], [], [3,16,2, 2,16,7], [], [], [11,16,9, 9,16,6], []],
	[[14,0,4, 0,14,12, 12,14,1], [], [], [12,7,2, 7,12,16, 16,12,3], [], [], [16,9,11, 9,16,14, 14,16,6], []],
	[[], [15,5,12, 5,0,12], [], [7,15,16, 15,12,16, 12,3,16], [], [], [16,6,9, 11,16,9], []],
	[[4,14,13, 18,13,14], [13,18,5, 15,5,18], [18,14,16, 16,14,3, 1,3,14], [18,16,15, 7,15,16], [], [], [6,14,16, 16,14,11, 9,11,14], []],
	[[], [], [12,1,18, 1,14,18], [7,2,18, 2,12,18], [], [], [14,9,18, 9,11,18], [11,7,18]],
	[[0,4,18], [2,0,18], [], [7,2,18], [4,9,18], [], [9,11,18], [11,7,18]],
	[[18,0,1, 18,1,14], [18,5,0], [], [], [18,14,9], [18,15,5], [18,9,11], [18,11,7, 18,7,15]],
	[[], [], [], [], [18,13,4, 18,4,9], [18,15,5, 18,5,13], [18,9,11], [18,11,7, 18,7,15]],
	[[], [], [], [], [8,14,4, 14,8,17], [], [17,6,14, 6,17,11], []],
	[[1,0,18, 0,13,18], [], [6,1,18], [], [13,8,18, 8,17,18], [], [17,11,18, 11,6,18], []],
	[[], [2,13,0, 2,5,13], [], [], [13,8,17, 13,17,14, 13,14,4], [], [17,11,6, 17,6,14], []],
	[[1,12,18], [12,2,18, 2,5,18], [6,1,18], [], [8,17,18], [5,8,18], [17,11,18, 11,6,18], []],
	[[18,1,4], [], [18,16,3, 18,3,1], [], [18,4,8, 18,8,17], [], [18,17,11, 18,11,16], []],
	[[], [0,13,12, 18,12,13], [], [12,18,3, 16,3,18], [], [13,8,18, 17,18,8], [], [18,17,16, 11,16,17]],
	[[18,12,13, 13,12,4, 1,4,12], [0,12,13, 13,12,5, 2,5,12], [3,12,16, 18,16,12], [], [18,13,17, 8,17,13], [], [16,18,11, 17,11,18], []],
	[[], [18,2,5], [], [18,16,3, 18,3,2], [], [18,5,8, 18,8,17], [], [18,17,11, 18,11,16]],
	[[], [], [], [16,7,2, 3,16,2], [14,4,17, 4,8,17], [], [6,14,16, 14,17,16, 17,11,16], []],
	[[], [12,13,18, 13,12,0], [12,6,1, 6,12,16, 16,12,3], [12,7,2, 7,12,16, 16,12,18], [], [18,8,17, 8,18,13], [], [16,17,11, 17,16,18]],
	[[12,18,0, 13,0,18, 18,14,13, 4,13,14], [], [3,16,12, 18,12,16, 16,6,18, 14,18,6], [], [], [17,18,8, 13,8,18, 18,15,13, 5,13,15], [], [11,16,17, 18,17,16, 16,7,18, 15,18,7]],
	[[], [], [1,16,6, 1,3,16], [], [], [15,5,8, 15,8,17], [], [16,7,15, 16,15,17, 16,17,11]],
	[[12,1,18, 1,4,18], [2,12,18], [], [7,2,18], [4,8,18], [8,17,18], [], [17,11,18, 11,7,18]],
	[[], [2,0,18, 0,13,18], [], [7,2,18], [], [13,8,18, 8,17,18], [], [17,11,18, 11,7,18]],
	[[13,0,1, 4,13,1], [], [], [], [], [8,17,13, 17,15,13, 15,5,13], [], [17,11,15, 11,7,15]],
	[[], [], [], [], [], [15,5,17, 8,17,5], [], [7,15,11, 17,11,15]],
	[[], [], [], [], [], [10,17,5, 5,17,8], [9,17,6, 6,17,11], []],
	[[13,1,0, 1,13,14, 14,13,4], [], [], [], [], [17,5,10, 5,17,13, 13,17,8], [14,11,6, 11,14,17, 17,14,9], []],
	[[], [13,0,2, 13,2,15], [], [], [], [17,8,13, 17,13,15, 17,15,10], [6,17,11, 6,9,17], []],
	[[], [], [14,12,18, 12,14,1], [18,2,15, 2,18,12], [14,8,4, 8,14,17, 17,14,9], [], [14,11,6, 11,14,17, 17,14,18], [17,15,10, 15,17,18]],
	[[], [], [16,3,1, 16,1,14], [], [], [5,17,8, 5,10,17], [17,11,16, 17,16,14, 17,14,9], []],
	[[13,12,0, 12,13,18], [], [18,3,12, 3,18,16], [], [17,4,9, 4,17,13, 13,17,18], [17,5,10, 5,17,13, 13,17,8], [17,16,18, 16,17,11], []],
	[[], [0,18,13, 18,0,12, 12,15,18, 15,12,2], [3,18,16, 18,3,12, 12,14,18, 14,12,1], [], [], [13,17,8, 17,13,18, 18,10,17, 10,18,15], [16,17,11, 17,16,18, 18,9,17, 9,18,14], []],
	[[], [], [], [16,3,15, 3,2,15], [17,8,4, 9,17,4], [], [], [11,16,17, 16,15,17, 15,10,17]],
	[[], [], [], [7,15,16, 16,15,3, 2,3,15], [], [10,17,15, 15,17,5, 8,5,17], [11,16,17, 17,16,9, 6,9,16], []],
	[[13,4,18, 4,14,18, 12,0,18, 0,13,18, 14,1,18, 1,12,18], [], [], [16,7,18, 7,15,18, 12,3,18, 3,16,18, 15,2,18, 2,12,18], [], [13,5,18, 5,15,18, 17,8,18, 8,13,18, 15,10,18, 10,17,18], [16,6,18, 6,14,18, 17,11,18, 11,16,18, 14,9,18, 9,17,18], []],
	[[], [18,0,12, 0,18,13], [], [16,12,3, 12,16,18], [], [17,13,18, 13,17,8], [17,6,9, 6,17,16, 16,17,11], [17,7,10, 7,17,16, 16,17,18]],
	[[], [], [6,14,16, 16,14,3, 1,3,14], [], [9,17,14, 14,17,4, 8,4,17], [], [], [11,16,17, 17,16,10, 7,10,16]],
	[[], [], [18,1,14, 1,18,12], [15,12,18, 12,15,2], [], [15,8,5, 8,15,17, 17,15,10], [17,14,9, 14,17,18], [15,11,7, 11,15,17, 17,15,18]],
	[[], [13,2,0, 2,13,15, 15,13,5], [], [], [17,4,9, 4,17,13, 13,17,8], [], [], [15,11,7, 11,15,17, 17,15,10]],
	[[13,0,14, 0,1,14], [], [], [], [8,13,17, 13,14,17, 14,9,17], [], [], [17,11,7, 10,17,7]],
	[[], [], [], [], [9,17,4, 4,17,8], [], [], [10,17,7, 7,17,11]],
	[[], [], [], [], [18,14,4, 18,4,13], [18,13,5, 18,5,10], [18,11,6, 18,6,14], [18,10,11]],
	[[1,0,18], [0,5,18], [6,1,18], [], [], [5,10,18], [11,6,18], [10,11,18]],
	[[18,4,0], [18,0,2, 18,2,15], [], [], [18,14,4], [18,15,10], [18,11,6, 18,6,14], [18,10,11]],
	[[], [], [6,1,18, 1,12,18], [12,2,18, 2,15,18], [], [], [11,6,18], [15,10,18, 10,11,18]],
	[[1,4,18], [], [16,3,18, 3,1,18], [], [4,13,18], [13,5,18, 5,10,18], [11,16,18], [10,11,18]],
	[[], [12,0,18, 0,5,18], [], [16,3,18, 3,12,18], [], [5,10,18], [], [10,11,18, 11,16,18]],
	[[4,12,1, 4,0,12], [], [], [12,2,15, 12,15,16, 12,16,3], [], [], [], [15,10,11, 15,11,16]],
	[[], [], [], [2,15,3, 16,3,15], [], [], [], [15,10,16, 11,16,10]],
	[[13,18,4, 14,4,18], [5,15,13, 18,13,15], [18,16,14, 6,14,16], [18,15,16, 16,15,3, 2,3,15], [], [], [], [7,15,16, 16,15,11, 10,11,15]],
	[[], [15,0,5, 0,15,12, 12,15,2], [12,6,1, 6,12,16, 16,12,3], [], [], [], [], [16,10,11, 10,16,15, 15,16,7]],
	[[14,4,0, 14,0,12], [], [16,6,14, 16,14,12, 16,12,3], [], [], [], [], [10,16,7, 10,11,16]],
	[[], [], [3,16,1, 1,16,6], [], [], [], [], [11,16,10, 10,16,7]],
	[[12,1,13, 1,4,13], [2,12,15, 12,13,15, 13,5,15], [], [], [], [], [], [15,10,11, 7,15,11]],
	[[], [5,15,0, 0,15,2], [], [], [], [], [], [7,15,11, 11,15,10]],
	[[0,1,4], [], [], [], [], [], [], [11,7,10]],
	[[], [], [], [], [], [], [], [7,10,11]],
	[[], [], [], [], [], [], [], [11,10,7]],
	[[4,1,0], [], [], [], [], [], [], [10,7,11]],
	[[], [2,15,0, 0,15,5], [], [], [], [], [], [10,15,11, 11,15,7]],
	[[13,4,1, 13,1,12], [15,5,13, 15,13,12, 15,12,2], [], [], [], [], [], [11,15,7, 11,10,15]],
	[[], [], [6,16,1, 1,16,3], [], [], [], [], [7,16,10, 10,16,11]],
	[[12,0,14, 0,4,14], [], [3,12,16, 12,14,16, 14,6,16], [], [], [], [], [16,11,10, 7,16,10]],
	[[], [2,15,12, 12,15,0, 5,0,15], [3,12,16, 16,12,6, 1,6,12], [], [], [], [], [7,16,15, 15,16,10, 11,10,16]],
	[[18,4,14, 4,18,13], [15,13,18, 13,15,5], [16,14,6, 14,16,18], [15,3,2, 3,15,16, 16,15,18], [], [], [], [15,11,10, 11,15,16, 16,15,7]],
	[[], [], [], [15,3,16, 3,15,2], [], [], [], [10,16,11, 16,10,15]],
	[[12,0,4, 1,12,4], [], [], [3,16,12, 16,15,12, 15,2,12], [], [], [], [16,11,15, 11,10,15]],
	[[], [18,5,0, 18,0,12], [], [18,12,3, 18,3,16], [], [18,10,5], [], [18,16,11, 18,11,10]],
	[[18,4,1], [], [18,1,3, 18,3,16], [], [18,13,4], [18,10,5, 18,5,13], [18,16,11], [18,11,10]],
	[[], [], [18,12,1, 18,1,6], [18,15,2, 18,2,12], [], [], [18,6,11], [18,11,10, 18,10,15]],
	[[0,4,18], [15,2,18, 2,0,18], [], [], [4,14,18], [10,15,18], [14,6,18, 6,11,18], [11,10,18]],
	[[18,0,1], [18,5,0], [18,1,6], [], [], [18,10,5], [18,6,11], [18,11,10]],
	[[], [], [], [], [13,4,18, 4,14,18], [10,5,18, 5,13,18], [14,6,18, 6,11,18], [11,10,18]],
	[[], [], [], [], [8,17,4, 4,17,9], [], [], [11,17,7, 7,17,10]],
	[[14,1,0, 14,0,13], [], [], [], [17,9,14, 17,14,13, 17,13,8], [], [], [7,17,10, 7,11,17]],
	[[], [5,13,15, 15,13,2, 0,2,13], [], [], [8,17,13, 13,17,4, 9,4,17], [], [], [10,15,17, 17,15,11, 7,11,15]],
	[[], [], [12,18,1, 14,1,18], [2,15,12, 18,12,15], [], [10,15,17, 17,15,8, 5,8,15], [18,17,14, 9,14,17], [18,15,17, 17,15,11, 7,11,15]],
	[[], [], [14,3,1, 3,14,16, 16,14,6], [], [17,4,8, 4,17,14, 14,17,9], [], [], [16,10,7, 10,16,17, 17,16,11]],
	[[], [13,18,0, 12,0,18], [], [18,16,12, 3,12,16], [], [8,17,13, 18,13,17], [11,17,16, 16,17,6, 9,6,17], [18,17,16, 16,17,7, 10,7,17]],
	[[18,12,1, 18,1,14, 18,13,0, 18,0,12, 18,14,4, 18,4,13], [], [], [18,12,2, 18,2,15, 18,16,3, 18,3,12, 18,15,7, 18,7,16], [], [18,17,10, 18,10,15, 18,13,8, 18,8,17, 18,15,5, 18,5,13], [18,17,9, 18,9,14, 18,16,11, 18,11,17, 18,14,6, 18,6,16], []],
	[[], [], [], [15,3,2, 3,15,16, 16,15,7], [], [17,5,8, 5,17,15, 15,17,10], [16,9,6, 9,16,17, 17,16,11], []],
	[[], [], [], [15,2,3, 15,3,16], [4,17,9, 4,8,17], [], [], [17,10,15, 17,15,16, 17,16,11]],
	[[], [2,12,15, 18,15,12, 12,0,18, 13,18,0], [1,12,14, 18,14,12, 12,3,18, 16,18,3], [], [], [15,18,10, 17,10,18, 18,13,17, 8,17,13], [14,18,9, 17,9,18, 18,16,17, 11,17,16], []],
	[[18,13,12, 0,12,13], [], [16,18,3, 12,3,18], [], [18,17,13, 13,17,4, 9,4,17], [8,17,13, 13,17,5, 10,5,17], [11,17,16, 18,16,17], []],
	[[], [], [14,1,16, 1,3,16], [], [], [17,10,5, 8,17,5], [9,14,17, 14,16,17, 16,11,17], []],
	[[], [], [1,14,12, 18,12,14], [12,18,2, 15,2,18], [9,14,17, 17,14,8, 4,8,14], [], [18,14,17, 17,14,11, 6,11,14], [18,17,15, 10,15,17]],
	[[], [15,2,13, 2,0,13], [], [], [], [10,15,17, 15,13,17, 13,8,17], [17,9,6, 11,17,6], []],
	[[4,13,14, 14,13,1, 0,1,13], [], [], [], [], [8,17,13, 13,17,5, 10,5,17], [9,14,17, 17,14,11, 6,11,14], []],
	[[], [], [], [], [], [8,17,5, 5,17,10], [11,17,6, 6,17,9], []],
	[[], [], [], [], [], [5,17,8, 17,5,15], [], [15,11,17, 11,15,7]],
	[[1,13,4, 1,0,13], [], [], [], [], [13,5,15, 13,15,17, 13,17,8], [], [15,7,11, 15,11,17]],
	[[], [18,13,0, 18,0,2], [], [18,2,7], [], [18,17,8, 18,8,13], [], [18,7,11, 18,11,17]],
	[[18,4,1, 18,1,12], [18,12,2], [], [18,2,7], [18,8,4], [18,17,8], [], [18,7,11, 18,11,17]],
	[[], [], [16,3,1, 6,16,1], [], [], [17,8,15, 8,5,15], [], [11,17,16, 17,15,16, 15,7,16]],
	[[14,13,4, 13,14,18, 18,0,13, 0,18,12], [], [6,18,14, 18,6,16, 16,12,18, 12,16,3], [], [], [15,13,5, 13,15,18, 18,8,13, 8,18,17], [], [7,18,15, 18,7,16, 16,17,18, 17,16,11]],
	[[], [0,12,13, 18,13,12], [3,12,16, 16,12,6, 1,6,12], [18,12,16, 16,12,7, 2,7,12], [], [13,18,8, 17,8,18], [], [18,16,17, 11,17,16]],
	[[], [], [], [2,16,3, 2,7,16], [17,8,4, 17,4,14], [], [16,11,17, 16,17,14, 16,14,6], []],
	[[], [5,2,18], [], [2,3,18, 3,16,18], [], [17,8,18, 8,5,18], [], [16,11,18, 11,17,18]],
	[[12,4,1, 4,12,13, 13,12,18], [12,5,2, 5,12,13, 13,12,0], [12,16,18, 16,12,3], [], [13,17,8, 17,13,18], [], [18,11,17, 11,18,16], []],
	[[], [13,12,18, 12,13,0], [], [18,3,16, 3,18,12], [], [8,18,17, 18,8,13], [], [17,16,11, 16,17,18]],
	[[4,1,18], [], [1,3,18, 3,16,18], [], [17,8,18, 8,4,18], [], [16,11,18, 11,17,18], []],
	[[18,12,1], [18,5,2, 18,2,12], [18,1,6], [], [18,17,8], [18,8,5], [18,6,11, 18,11,17], []],
	[[], [13,5,2, 0,13,2], [], [], [4,14,13, 14,17,13, 17,8,13], [], [14,6,17, 6,11,17], []],
	[[18,13,0, 18,0,1], [], [18,1,6], [], [18,17,8, 18,8,13], [], [18,6,11, 18,11,17], []],
	[[], [], [], [], [17,8,14, 4,14,8], [], [11,17,6, 14,6,17], []],
	[[], [], [], [], [9,4,18, 4,13,18], [13,5,18, 5,15,18], [11,9,18], [15,7,18, 7,11,18]],
	[[14,1,18, 1,0,18], [0,5,18], [], [], [9,14,18], [5,15,18], [11,9,18], [15,7,18, 7,11,18]],
	[[18,4,0], [18,0,2], [], [18,2,7], [18,9,4], [], [18,11,9], [18,7,11]],
	[[], [], [18,14,1, 18,1,12], [18,12,2, 18,2,7], [], [], [18,11,9, 18,9,14], [18,7,11]],
	[[14,13,18, 13,14,4], [18,5,15, 5,18,13], [14,3,1, 3,14,16, 16,14,18], [16,15,7, 15,16,18], [], [], [14,11,9, 11,14,16, 16,14,6], []],
	[[], [12,0,5, 12,5,15], [], [16,3,12, 16,12,15, 16,15,7], [], [], [9,16,11, 9,6,16], []],
	[[1,14,12, 12,14,0, 4,0,14], [], [], [3,12,16, 16,12,7, 2,7,12], [], [], [6,16,14, 14,16,9, 11,9,16], []],
	[[], [], [], [7,16,2, 2,16,3], [], [], [6,16,9, 9,16,11], []],
	[[4,13,18], [13,5,18, 5,2,18], [3,16,18], [2,3,18], [9,4,18], [], [16,11,18, 11,9,18], []],
	[[], [5,12,0, 5,2,12], [12,3,16, 12,16,14, 12,14,1], [], [], [], [16,11,9, 16,9,14], []],
	[[18,4,0, 18,0,12], [], [18,12,3, 18,3,16], [], [18,9,4], [], [18,16,11, 18,11,9], []],
	[[], [], [3,16,1, 14,1,16], [], [], [], [16,11,14, 9,14,11], []],
	[[14,4,13, 14,13,12, 14,12,1], [13,5,2, 13,2,12], [], [], [], [], [11,14,6, 11,9,14], []],
	[[], [5,2,0], [], [], [], [], [9,6,11], []],
	[[1,14,0, 0,14,4], [], [], [], [], [], [9,14,11, 11,14,6], []],
	[[], [], [], [], [], [], [11,9,6], []],
	[[], [], [], [], [], [], [16,9,17, 9,16,6], [7,17,10, 17,7,16]],
	[[14,1,0, 4,14,0], [], [], [], [], [], [9,17,14, 17,16,14, 16,6,14], [17,10,16, 10,7,16]],
	[[], [0,15,5, 0,2,15], [], [], [], [], [16,6,9, 16,9,17], [15,7,16, 15,16,17, 15,17,10]],
	[[4,18,13, 18,4,14, 14,12,18, 12,14,1], [13,15,5, 15,13,18, 18,2,15, 2,18,12], [], [], [], [], [6,18,16, 18,6,14, 14,17,18, 17,14,9], [16,15,7, 15,16,18, 18,10,15, 10,18,17]],
	[[], [], [18,3,1, 18,1,14], [18,7,3], [], [], [18,14,9, 18,9,17], [18,17,10, 18,10,7]],
	[[18,0,4], [18,12,0], [], [18,7,3, 18,3,12], [18,4,9, 18,9,17], [18,17,10], [], [18,10,7]],
	[[18,12,14, 1,14,12], [18,15,12, 12,15,0, 5,0,15], [], [2,15,12, 12,15,3, 7,3,15], [17,18,9, 14,9,18], [10,15,17, 18,17,15], [], []],
	[[], [], [], [15,7,3, 2,15,3], [13,4,17, 4,9,17], [5,13,15, 13,17,15, 17,10,15], [], []],
	[[], [], [18,3,6], [18,15,2, 18,2,3], [], [], [18,6,9, 18,9,17], [18,17,10, 18,10,15]],
	[[14,0,4, 0,14,12, 12,14,18], [12,15,2, 15,12,18], [14,3,6, 3,14,12, 12,14,1], [], [14,17,18, 17,14,9], [18,10,15, 10,18,17], [], []],
	[[0,12,18], [5,0,18], [12,3,18, 3,6,18], [], [9,17,18], [17,10,18, 10,5,18], [6,9,18], []],
	[[], [], [3,14,1, 3,6,14], [], [14,9,17, 14,17,13, 14,13,4], [17,10,5, 17,5,13], [], []],
	[[14,18,1, 12,1,18], [18,15,12, 2,12,15], [], [], [9,17,14, 18,14,17], [17,10,18, 15,18,10], [], []],
	[[0,4,18], [15,2,18, 2,0,18], [], [], [4,9,18, 9,17,18], [17,10,18, 10,15,18], [], []],
	[[18,0,1, 18,1,14], [18,5,0], [], [], [18,14,9, 18,9,17], [18,17,10, 18,10,5], [], []],
	[[], [], [], [], [9,17,4, 13,4,17], [17,10,13, 5,13,10], [], []],
	[[], [], [], [], [14,4,18, 4,8,18], [8,10,18], [16,6,18, 6,14,18], [10,7,18, 7,16,18]],
	[[18,1,0, 18,0,13], [], [18,6,1], [], [18,13,8], [18,8,10], [18,16,6], [18,10,7, 18,7,16]],
	[[], [15,0,2, 0,15,13, 13,15,5], [], [], [13,14,4, 14,13,18], [15,8,10, 8,15,13, 13,15,18], [18,6,14, 6,18,16], [15,16,18, 16,15,7]],
	[[], [], [16,6,12, 6,1,12], [7,16,15, 16,12,15, 12,2,15], [], [15,5,8, 10,15,8], [], []],
	[[1,4,18], [], [3,1,18], [7,3,18], [4,8,18], [8,10,18], [], [10,7,18]],
	[[], [18,12,0, 18,0,13], [], [18,7,3, 18,3,12], [], [18,13,8, 18,8,10], [], [18,10,7]],
	[[13,1,4, 1,13,12, 12,13,0], [], [], [12,7,3, 7,12,15, 15,12,2], [], [15,8,10, 8,15,13, 13,15,5], [], []],
	[[], [], [], [2,15,3, 3,15,7], [], [10,15,8, 8,15,5], [], []],
	[[18,14,4], [18,15,2], [18,3,6, 18,6,14], [18,2,3], [18,4,8], [18,8,10, 18,10,15], [], []],
	[[], [12,0,13, 12,13,15, 12,15,2], [6,12,3, 6,1,12], [], [], [13,8,10, 13,10,15], [], []],
	[[0,12,13, 12,14,13, 14,4,13], [], [12,3,14, 3,6,14], [], [], [13,8,10, 5,13,10], [], []],
	[[], [], [6,1,3], [], [], [10,5,8], [], []],
	[[18,12,1, 18,1,4], [18,15,2, 18,2,12], [], [], [18,4,8], [18,8,10, 18,10,15], [], []],
	[[], [0,13,2, 15,2,13], [], [], [], [13,8,15, 10,15,8], [], []],
	[[4,13,1, 1,13,0], [], [], [], [], [5,13,10, 10,13,8], [], []],
	[[], [], [], [], [], [10,5,8], [], []],
	[[], [], [], [], [18,9,8], [18,8,5, 18,5,15], [18,16,6, 18,6,9], [18,15,7, 18,7,16]],
	[[4,14,13, 13,14,0, 1,0,14], [], [], [], [18,14,13, 13,14,8, 9,8,14], [18,13,15, 5,15,13], [6,14,16, 18,16,14], [16,18,7, 15,7,18]],
	[[18,13,0], [18,0,2], [18,16,6], [18,2,7, 18,7,16], [18,9,8, 18,8,13], [], [18,6,9], []],
	[[], [], [14,1,12, 14,12,16, 14,16,6], [12,2,7, 12,7,16], [8,14,9, 8,4,14], [], [], []],
	[[1,14,18], [5,15,18], [3,1,18], [15,7,18, 7,3,18], [14,9,18, 9,8,18], [8,5,18], [], []],
	[[], [5,15,13, 15,12,13, 12,0,13], [], [15,7,12, 7,3,12], [13,4,9, 8,13,9], [], [], []],
	[[12,1,14, 12,14,13, 12,13,0], [], [], [7,12,2, 7,3,12], [14,9,8, 14,8,13], [], [], []],
	[[], [], [], [3,2,7], [8,4,9], [], [], []],
	[[], [18,5,2], [18,3,6], [18,2,3], [18,9,8], [18,8,5], [18,6,9], []],
	[[], [0,13,12, 12,13,2, 5,2,13], [1,12,14, 14,12,6, 3,6,12], [], [4,14,13, 13,14,8, 9,8,14], [], [], []],
	[[13,0,18, 0,12,18], [], [12,3,18, 3,6,18], [], [9,8,18, 8,13,18], [], [6,9,18], []],
	[[], [], [6,14,3, 3,14,1], [], [4,14,8, 8,14,9], [], [], []],
	[[18,12,1, 18,1,14], [18,5,2, 18,2,12], [], [], [18,14,9, 18,9,8], [18,8,5], [], []],
	[[], [0,13,2, 2,13,5], [], [], [8,13,9, 9,13,4], [], [], []],
	[[1,14,0, 13,0,14], [], [], [], [14,9,13, 8,13,9], [], [], []],
	[[], [], [], [], [8,4,9], [], [], []],
	[[4,13,14, 18,14,13], [13,5,18, 15,18,5], [14,18,6, 16,6,18], [18,15,16, 7,16,15], [], [], [], []],
	[[18,1,0], [18,0,5, 18,5,15], [18,16,6, 18,6,1], [18,15,7, 18,7,16], [], [], [], []],
	[[14,4,18, 4,0,18], [0,2,18], [16,6,18, 6,14,18], [2,7,18, 7,16,18], [], [], [], []],
	[[], [], [1,12,6, 16,6,12], [12,2,16, 7,16,2], [], [], [], []],
	[[1,4,18, 4,13,18], [13,5,18, 5,15,18], [3,1,18], [15,7,18, 7,3,18], [], [], [], []],
	[[], [12,0,15, 5,15,0], [], [3,12,7, 15,7,12], [], [], [], []],
	[[0,12,4, 4,12,1], [], [], [3,12,7, 7,12,2], [], [], [], []],
	[[], [], [], [2,7,3], [], [], [], []],
	[[18,14,4, 18,4,13], [18,13,5, 18,5,2], [18,3,6, 18,6,14], [18,2,3], [], [], [], []],
	[[], [2,12,5, 5,12,0], [1,12,6, 6,12,3], [], [], [], [], []],
	[[14,4,12, 0,12,4], [], [6,14,3, 12,3,14], [], [], [], [], []],
	[[], [], [3,6,1], [], [], [], [], []],
	[[4,13,1, 12,1,13], [13,5,12, 2,12,5], [], [], [], [], [], []],
	[[], [5,2,0], [], [], [], [], [], []],
	[[0,1,4], [], [], [], [], [], [], []],
	[[], [], [], [], [], [], [], []],
]

# inneficient brute-forcing, but that's OK because it's just a dev tool.
func generate_march_ang_ind_table() -> void:
	var inds_string: String = ""
	var patt_i: int = 0; 
	var rot_z: int = 0; var rot_y: int = 0; var rot_x: int = 0; 
	var flip_x: bool = false; var inv_state: bool = false
	var comb_inds: Array = []
	# Note: This uses brute-force and is slow, but that's ok because this is just a dev-tool function.) 
	for comb: int in range(0, 256):
		for i: int in range(0, ts_march_patt_states.size()*4*4*4*2*2):
			inv_state = bool(i%2); flip_x = bool((i/2)%2)
			rot_x = (i/4)%4; rot_y = (i/16)%4; rot_z = (i/64)%4
			patt_i = i/256
			if tranform_march_states(comb, rot_z, rot_y, rot_x, flip_x, inv_state) == ts_march_patt_states[patt_i]:
				comb_inds = detransform_march_ang_inds(patt_i, rot_z, rot_y, rot_x, flip_x, inv_state)
				inds_string += "["
				for sect: int in range(8): 
					inds_string += "["
					for tri_num: int in range(comb_inds[sect].size()/3):
						inds_string += str(comb_inds[sect][(tri_num*3)+0]) + ","
						inds_string += str(comb_inds[sect][(tri_num*3)+1]) + ","
						inds_string += str(comb_inds[sect][(tri_num*3)+2])
						if tri_num < (comb_inds[sect].size()/3) - 1:
							inds_string += ", "
					inds_string += "]"
					if sect < 7:
						inds_string += ", "
				inds_string += "],\n"
				break
	print("[////]   MARCHING CUBES INDICES TABLE : [////]\n")
	print(inds_string)
	print("[////] : MARCHING CUBES INDICES TABLE   [////]\n")

# Note: Has common usability across all marching cubes variants (angular, weighted, b-centered, v-centered...)
func tranform_march_states(comb: int, rot_z: int, rot_y: int, rot_x: int, flip_x: bool, inv_state: bool) -> int:
	for i in range(0, rot_z):
		comb = (((comb & 0b00010001) << 1) | ((comb & 0b00100010) << 2) | 
				((comb & 0b10001000) >> 1) | ((comb & 0b01000100) >> 2))
	for i in range(0, rot_y):
		comb = (((comb & 0b00000101) << 4) | ((comb & 0b01010000) << 1) | 
				((comb & 0b00001010) >> 1) | ((comb & 0b10100000) >> 4))
	for i in range(0, rot_x):
		comb = (((comb & 0b00110000) >> 4) | ((comb & 0b00000011) << 2) | 
				((comb & 0b11000000) >> 2) | ((comb & 0b00001100) << 4))
	if flip_x:
		comb = ((comb & 0b10101010) >> 1) | ((comb & 0b01010101) << 1)
	if inv_state:
		comb = ~ comb
	return PackedByteArray([comb])[0] # (casts int into a byte)

func detransform_march_ang_inds(patt_i: int, rot_z: int, rot_y: int, rot_x: int, flip_x: bool, inv_state: bool) -> Array:
	var inds: Array = ts_march_ang_patt_inds.duplicate(true)[patt_i]
	if not (inv_state != flip_x): # outer 'not' accounts for coordinate system chirality flipping.
		for i in range(8):
			inds[i].reverse()
	if flip_x:
		for i in range(8): for j in range(inds[i].size()):
			inds[i][j] = PackedByteArray([0,2,1,3,5,4,7,6,8,10,9,11,12,13,15,14,16,17,18,20,19,22,21,24,23,26,25])[inds[i][j]]
		inds = [inds[1],inds[0],inds[3],inds[2],inds[5],inds[4],inds[7],inds[6]]
	for _r in range(0, rot_x):
		for i in range(8): for j in range(inds[i].size()):
			inds[i][j] = PackedByteArray([8,4,5,0,9,10,1,2,11,6,7,3,13,17,14,15,12,16,18,23,24,19,20,25,26,21,22])[inds[i][j]]
		inds = [inds[2],inds[3],inds[6],inds[7],inds[0],inds[1],inds[4],inds[5]]
	for _r in range(0, rot_y):
		for i in range(8): for j in range(inds[i].size()):
			inds[i][j] = PackedByteArray([5,2,10,7,0,8,3,11,4,1,9,6,15,13,12,17,16,14,18,20,24,22,26,19,23,21,25])[inds[i][j]]
		inds = [inds[4],inds[0],inds[6],inds[2],inds[5],inds[1],inds[7],inds[3]]
	for _r in range(0, rot_z):
		for i in range(8): for j in range(inds[i].size()):
			inds[i][j] = PackedByteArray([1,3,0,2,6,4,7,5,9,11,8,10,12,14,16,13,15,17,18,21,19,22,20,25,23,26,24])[inds[i][j]]
		inds = [inds[1],inds[3],inds[0],inds[2],inds[5],inds[7],inds[4],inds[6]]
	return inds

func _ready():
	#generate_march_ang_ind_table()
	pass
